{"version":3,"sources":["scripts/main.js"],"names":["container","document","querySelector","field","tbody","tBodies","appendRow","appendColumn","removeRow","removeColumn","addEventListener","e","target","matches","newTr","cloneNode","children","length","disabled","append","deleteRow","rows","forEach","tr","innerHTML","td","deleteCell"],"mappings":";AAAA,aAUA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EARA,IAAMA,EAAYC,SAASC,cAAc,cACnCC,EAAQF,SAASC,cAAc,UAC/BE,EAAQD,EAAME,QAAQ,GACtBC,EAAYL,SAASC,cAAc,eACnCK,EAAeN,SAASC,cAAc,kBACtCM,EAAYP,SAASC,cAAc,eACnCO,EAAeR,SAASC,cAAc,kBAE5CF,EAAUU,iBAAiB,QAAS,SAACC,GAC/BA,GAAAA,EAAEC,OAAOC,QAAQ,eAAgB,CAC7BC,IAAAA,EAAQb,SAASC,cAAc,MAAMa,WAAU,GAEvB,KAA1BX,EAAMY,SAASC,SACjBN,EAAEC,OAAOM,UAAW,GAGQ,IAA1Bd,EAAMY,SAASC,SACjBT,EAAUU,UAAW,GAEvBd,EAAMe,OAAOL,GAGXH,EAAEC,OAAOC,QAAQ,iBACnBT,EAAMgB,WAAW,GAEa,IAA1BhB,EAAMY,SAASC,SACjBN,EAAEC,OAAOM,UAAW,GAGQ,KAA1Bd,EAAMY,SAASC,SACjBX,EAAUY,UAAW,IAIrBP,EAAEC,OAAOC,QAAQ,mBACfV,EAAAA,EAAMkB,MAAMC,QAAQ,SAAAC,GACtBA,EAAGC,WAAH,+CAK2B,KAAvBD,EAAGP,SAASC,SACdN,EAAEC,OAAOM,UAAW,GAGK,IAAvBK,EAAGP,SAASC,SACdR,EAAaS,UAAW,KAK1BP,EAAEC,OAAOC,QAAQ,mBACfV,EAAAA,EAAMkB,MAAMC,QAAQ,SAAAG,GACtBA,EAAGC,YAAY,GAEXD,EAAGT,SAASC,QAAU,IACxBN,EAAEC,OAAOM,UAAW,GAGlBO,EAAGT,SAASC,QAAU,IACxBV,EAAaW,UAAW","file":"main.75110bad.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst container = document.querySelector('.container');\nconst field = document.querySelector('.field');\nconst tbody = field.tBodies[0];\nconst appendRow = document.querySelector('.append-row');\nconst appendColumn = document.querySelector('.append-column');\nconst removeRow = document.querySelector('.remove-row');\nconst removeColumn = document.querySelector('.remove-column');\n\ncontainer.addEventListener('click', (e) => {\n  if (e.target.matches('.append-row')) {\n    const newTr = document.querySelector('tr').cloneNode(true);\n\n    if (tbody.children.length === 10) {\n      e.target.disabled = true;\n    }\n\n    if (tbody.children.length === 2) {\n      removeRow.disabled = false;\n    }\n    tbody.append(newTr);\n  }\n\n  if (e.target.matches('.remove-row')) {\n    tbody.deleteRow(-1);\n\n    if (tbody.children.length === 2) {\n      e.target.disabled = true;\n    }\n\n    if (tbody.children.length === 10) {\n      appendRow.disabled = false;\n    }\n  }\n\n  if (e.target.matches('.append-column')) {\n    [...field.rows].forEach(tr => {\n      tr.innerHTML += `\n      <tr>\n        <td></td>\n      </tr>`;\n\n      if (tr.children.length === 10) {\n        e.target.disabled = true;\n      }\n\n      if (tr.children.length === 2) {\n        removeColumn.disabled = false;\n      }\n    });\n  }\n\n  if (e.target.matches('.remove-column')) {\n    [...field.rows].forEach(td => {\n      td.deleteCell(-1);\n\n      if (td.children.length <= 2) {\n        e.target.disabled = true;\n      }\n\n      if (td.children.length >= 2) {\n        appendColumn.disabled = false;\n      }\n    });\n  }\n});\n"]}